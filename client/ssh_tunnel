#!/usr/bin/env bash

set -euo pipefail

SSH_PUB_KEY_FILE="${SSH_PUB_KEY_FILE:-$HOME/.ssh/id_rsa.pub}"
REGION="${AWS_REGION:-eu-central-1}"
NAME="${NAME:-bastion-ssm-iam}"
RANDOM_PORT=$(( ( RANDOM % 60000 ) + 1024 ))
DEV_LOCAL_PORT="${DEV_LOCAL_PORT:-$RANDOM_PORT}"
FORWARD_TO=$1

function print_error {
    read line file <<<$(caller)
    echo "An error occurred in line $line of file $file:" >&2
    sed "${line}q;d" "$file" >&2
    exit 1
}

if ! [ -x "$(command -v jq)" ]; then
  trap print_error 'The command jq is required'
fi

if ! [ -x "$(command -v aws)" ]; then
  trap print_error 'The command aws is required'
fi

if ! [ -x "$(command -v session-manager-plugin)" ]; then
  trap print_error 'The command session-manager-plugin is required'
fi

if [[ $# -eq 0 ]] ; then
  trap print_error "Please provide the hostname:port as argument, for example $0 host_inside_vpc:3306"
fi

if [ ! -f "$SSH_PUB_KEY_FILE" ] ; then
  trap print_error "The ssh public key does not exist"
fi


INSTANCE_ID=$(aws ec2 describe-instances \
               --region "${REGION}" \
               --filter "Name=tag:Name,Values=$NAME" \
               --query "Reservations[].Instances[?State.Name == 'running'].InstanceId[]" \
               --output text)

AZ=$(aws ec2 describe-instances --region "${REGION}" --filter "Name=tag:Name,Values=$NAME" "Name=instance-state-code,Values=16" --output json| jq -r '.Reservations[].Instances[].Placement.AvailabilityZone')

if [ "${INSTANCE_ID}" == "" ];then
  trap print_error "No instance with ssm running could be found"
fi

echo -n "Provisioning Bastion SSH Instance with temporary key .... "
aws ec2-instance-connect send-ssh-public-key --region $REGION --instance-id "${INSTANCE_ID}" --availability-zone "${AZ}" --instance-os-user ec2-user --ssh-public-key file://$SSH_PUB_KEY_FILE 2>&1 > /dev/null || trap print_error "Failed"
echo "Success!"

echo "127.0.0.1:$DEV_LOCAL_PORT is forwarding to $FORWARD_TO"
echo .
echo "Press ctrl-c to exit."
ssh -nNT -o "ProxyCommand=sh -c \"/usr/local/bin/aws ssm --region $REGION start-session --target %h --document-name AWS-StartSSHSession\"" "ec2-user@${INSTANCE_ID}" -L $DEV_LOCAL_PORT:$FORWARD_TO
